<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xilihuasi`s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-03-03T11:08:26.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>xilihuasi</name>
    <email>xilihuasi24@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sass用法介绍</title>
    <link href="http://yoursite.com/2017/02/28/Sass%E7%94%A8%E6%B3%95%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2017/02/28/Sass用法介绍/</id>
    <published>2017-02-28T15:20:10.000Z</published>
    <updated>2017-03-03T11:08:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>  css决定前端的颜值，但其落后的语法一直被诟病。CSS本身是简单并有趣的，但当样式表变得庞大、复杂后，CSS变得难以维护。直到Sass,Less,Stylus等预处理工具的出现，才使这一问题得到缓解。<a id="more"></a>接下来就以Sass为例来介绍。</p>
<h2 id="Sass"><a href="#Sass" class="headerlink" title="Sass"></a>Sass</h2><p>  什么是Sass？GitHub上是这样介绍的，Sass让CSS再一次变得有趣。Sass是CSS的拓展，添加了嵌套规则，变量，混合，选择器继承等特性。Sass并不改变CSS的语法特性，只是通过命令行或web框架插件把Sass编译成标准格式化的CSS。<br>  Sass有两种语法。一种全新的主要的语法是”SCSS”(Sass 3),是CSS的超集，可以使用CSS的一切语法。SCSS文件采用<code>.scss</code>后缀。另一种较旧的语法采用缩进格式，取代CSS的大括号和分号，这种缩进语法文件采用<code>.sass</code>后缀（跟python类似）。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//.scss</div><div class="line">body&#123;</div><div class="line">    div&#123;</div><div class="line">        background-color:#f5f5f5;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//.sass</div><div class="line">body</div><div class="line">  div</div><div class="line">    background-color:#f5f5f5</div></pre></td></tr></table></figure></p>
<p>  由于不同编辑器对文档的缩进不尽统一，为了避免严格的格式要求导致报错以及书写的方便，建议采用<code>.scss</code>后缀名的文件。</p>
<h2 id="Sass语法"><a href="#Sass语法" class="headerlink" title="Sass语法"></a>Sass语法</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>  朋友，你是否为需求变更全局修改样式感到烦恼，是否因为字体宽高的数学计算感到力不从心，不用怕Sass让你重振雄风。Sass允许使用变量来存储你想在样式表中重用的值，比如颜色，字号或者其他任意CSS值。Sass通过<code>$</code>符号定义变量。</p>
<h4 id="普通变量"><a href="#普通变量" class="headerlink" title="普通变量"></a>普通变量</h4><p>  在Sass中，我们可以把反复用到的属性值或者经常修改的值定义成变量，在属性名或字符串中使用则需要写在#{}中。例如：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">//代码块中，input.scss代表Sass输入文件，output.css代表Sass编译输出文件，后续小节中同理。</div><div class="line">//input.scss</div><div class="line">$font:17px;</div><div class="line">$top:top;</div><div class="line">$img-url:&quot;/index/&quot;;</div><div class="line">p&#123;</div><div class="line">    font-size:$font;</div><div class="line">    margin-#&#123;$top&#125;:10px;</div><div class="line">&#125;</div><div class="line">.site-nav&#123;</div><div class="line">    background-imgage:url(#&#123;$img-url&#125;icon.png);</div><div class="line">&#125;</div><div class="line"></div><div class="line">//output.css</div><div class="line">p&#123;</div><div class="line">    font-size:17px;</div><div class="line">    margin-top:10px;</div><div class="line">&#125;</div><div class="line">.site-nav&#123;</div><div class="line">    background-imgage:url(/index/icon.png);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="默认变量"><a href="#默认变量" class="headerlink" title="默认变量"></a>默认变量</h4><p>  默认变量的含义是，如果一个变量被声明赋值那就用它声明的值，否则就用默认值。Sass设置默认变量只需在值后面加上!default即可。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//input.scss</div><div class="line">$font:18px !default;</div><div class="line">p&#123;</div><div class="line">    font-size:$font;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//output.css</div><div class="line">p&#123;</div><div class="line">    font-size:18px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>  需要覆盖的时候只需要像普通变量一样重新赋值就可以了（注：有些教程里写必须在默认变量前声明覆盖，相信有心的小朋友已经发现是错误的了）。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//input.scss</div><div class="line">$font:18px !default;</div><div class="line">$font:20px;</div><div class="line">p&#123;</div><div class="line">    font-size:$font;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//output.css</div><div class="line">p&#123;</div><div class="line">    font-size:20px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="全局变量和局部变量"><a href="#全局变量和局部变量" class="headerlink" title="全局变量和局部变量"></a>全局变量和局部变量</h4><p>  在Sass中，定义在选择器中的变量为局部变量，反之则为全局变量。当在局部范围（选择器、函数、混合宏）内声明全局范围已经存在的变量时，局部变量的作用域仅限局部范围。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">//input.scss</div><div class="line">$color:#000;</div><div class="line">p&#123;</div><div class="line">    color:$color;</div><div class="line">&#125;</div><div class="line">.warn-txt&#123;</div><div class="line">    $color:red;</div><div class="line">    color:$color;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//output.css</div><div class="line">p&#123;</div><div class="line">    color:#000;</div><div class="line">&#125;</div><div class="line">.warn-txt&#123;</div><div class="line">    color:red;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>  如果需要在局部范围内覆盖，需要在值后添加!global。<strong>需要注意的是，局部范围声明覆盖，之前的值不会被覆盖</strong>。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">//input.scss</div><div class="line">$color:#000;</div><div class="line">a&#123;</div><div class="line">    color:$color;</div><div class="line">&#125;</div><div class="line">.warn-txt&#123;</div><div class="line">    $color:red !global;</div><div class="line">    color:$color;</div><div class="line">&#125;</div><div class="line">p&#123;</div><div class="line">    color:$color;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//output.css</div><div class="line">a&#123;</div><div class="line">    color:#000;</div><div class="line">&#125;</div><div class="line">.warn-txt&#123;</div><div class="line">    color:red;</div><div class="line">&#125;</div><div class="line">p&#123;</div><div class="line">    color:red;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="多值变量"><a href="#多值变量" class="headerlink" title="多值变量"></a>多值变量</h4><p>  多值变量类似js中的数组，声明时只需要将多个值用空格隔开即可。可以通过length($color)来获取值的个数，nth($color,index)来获取index位置的值（index范围为1到length($color)）。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">//input.scss</div><div class="line">$color:#000 #3fc894 #ff6262;</div><div class="line">p&#123;</div><div class="line">    color:nth($color,2);</div><div class="line">    margin-top:length($color)px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//output.css</div><div class="line">p&#123;</div><div class="line">    color:#3fc894;</div><div class="line">    margin-top:3px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h3><p>  嵌套是一种可以让你优雅地写样式的特性，可以让你像写页面元素一样写样式，让代码更简洁，结构清晰、容易维护。嵌套可以在选择器和样式属性上使用。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">//input.css</div><div class="line">.box&#123;</div><div class="line">    padding:10px;</div><div class="line">    background:&#123;</div><div class="line">        size:cover;</div><div class="line">        color:#ddd;</div><div class="line">    &#125;</div><div class="line">    a&#123;</div><div class="line">        color:#000;</div><div class="line">    &#125;</div><div class="line">    img&#123;</div><div class="line">        width:100px;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//output.scss</div><div class="line">.box &#123;</div><div class="line">    padding:10px;</div><div class="line">    background-size:cover;</div><div class="line">    background-color:#ddd;</div><div class="line">&#125;</div><div class="line">.box a&#123;</div><div class="line">    color:#000;</div><div class="line">&#125;</div><div class="line">.box img&#123;</div><div class="line">    width:100px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>  需要注意的是，嵌套不宜过多以免生成的选择器过长。一些可以合并的属性如border-color,border-width尽量合并书写。</p>
<h3 id="混合器"><a href="#混合器" class="headerlink" title="混合器"></a>混合器</h3><p>  Sass中使用@mixin声明混合器，可以传递参数，参数名以$符号开始，也可以给参数设置默认值。声明的@mixin通过@include调用。我们经常使用的单行文本溢出显示省略号的属性，可以通过混合器来避免代码重复书写问题。</p>
<h4 id="无参数混合"><a href="#无参数混合" class="headerlink" title="无参数混合"></a>无参数混合</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">//input.scss</div><div class="line">@mixin ellipsis&#123;</div><div class="line">    width:100%;</div><div class="line">    overflow:hidden;</div><div class="line">    white-space:nowrap;</div><div class="line">    text-overflow:ellipsis;</div><div class="line">&#125;</div><div class="line">p&#123;</div><div class="line">    @include ellipsis;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//output.css</div><div class="line">p&#123;</div><div class="line">    width:100%;</div><div class="line">    overflow:hidden;</div><div class="line">    white-space:nowrap;</div><div class="line">    text-overflow:ellipsis;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="带参数的混合器"><a href="#带参数的混合器" class="headerlink" title="带参数的混合器"></a>带参数的混合器</h4><p>  带参数的混合器，可以根据业务需求的不同来定义不同的值。例如定义一个动画延迟<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//input.scss</div><div class="line">@mixin animate-delay($second)&#123;</div><div class="line">    -webkit-animation-delay: $second;</div><div class="line">    animation-delay: $second;</div><div class="line">&#125;</div><div class="line">.rect&#123;</div><div class="line">    @include animate-delay(2s);</div><div class="line">&#125;</div><div class="line">//output.css</div><div class="line">.rect&#123;</div><div class="line">    -webkit-animation-delay: 2s;</div><div class="line">    animation-delay: 2s;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  css决定前端的颜值，但其落后的语法一直被诟病。CSS本身是简单并有趣的，但当样式表变得庞大、复杂后，CSS变得难以维护。直到Sass,Less,Stylus等预处理工具的出现，才使这一问题得到缓解。
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
      <category term="sass" scheme="http://yoursite.com/tags/sass/"/>
    
  </entry>
  
  <entry>
    <title>hexo部署到github</title>
    <link href="http://yoursite.com/2016/11/25/hexo%E9%83%A8%E7%BD%B2%E5%88%B0github/"/>
    <id>http://yoursite.com/2016/11/25/hexo部署到github/</id>
    <published>2016-11-25T02:56:34.000Z</published>
    <updated>2016-11-28T01:52:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前介绍了如何搭建本地hexo环境，相信很多小朋友已经搭建成功了。但是写了博客只放在本地不跟大家分享肯定不是我们想要的，本文就手把手教你怎样把hexo部署到github Page上跟大家分享你的文章。<a id="more"></a>为方便描述，文内所有的username表示你的GitHub用户名。</p>
<h2 id="创建GitHub-Pages"><a href="#创建GitHub-Pages" class="headerlink" title="创建GitHub Pages"></a>创建GitHub Pages</h2><p>GitHub Pages的目标在于让用户可以轻易向世界分享有趣的事情，即使你不懂代码也可以轻松创建美观的页面，任何人通过浏览器都可以访问。<a href="https://pages.github.com/" target="_blank" rel="external">GitHub Pages</a>主页有详细的教程，这里就不重复造轮子了。</p>
<h2 id="设置SHH-keys"><a href="#设置SHH-keys" class="headerlink" title="设置SHH keys"></a>设置SHH keys</h2><p>SSH keys是GitHub提供的一种不用输入密码就能识别可信的计算机的方式，通过在本地生成然后配置到你的GitHub账户，配置完成后便可把GitHub做为远程服务器进行版本控制。</p>
<ol>
<li>查看SSH keys是否存在<br> 首先打开Git Bash（任意位置均可），输入以下命令或者直接在文件管理器C:\Users\[当前系统用户]\.ssh路径下查看本地SSH keys。<br> <code>ls -al ~/.ssh</code><br> <img src="http://ofjlqteaa.bkt.clouddn.com/hexoDeploy/github1.png" alt=""><br> 如果有文件id_rsa.pub或id_dsa.pub，则直接进入步骤3在GitHub中添加SSH key。当然，如果你不确定这些文件何时生成或者不喜欢这些文件，直接丢进回收站然后进入步骤2也是完全没有任何问题的。</li>
<li><p>生成新的SSH key<br> 生成public/private rsa key pair。在命令行中输入以下指令,其中email@example.com是你GitHub的注册邮箱。<br> <code>ssh-keygen -t rsa -C &quot;email@example.com&quot;</code><br> <img src="http://ofjlqteaa.bkt.clouddn.com/hexoDeploy/github2.png" alt=""><br> 设置passphrase（可直接enter跳过）。设置passphrase后，进行版本控制时，每次与GitHub通信都会要求输入passphrase，以避免误操作。</p>
<p> 确保ssh-agent已经开启:<br> <code>eval &#39;ssh-agent -s&#39;</code></p>
<p> 将生成的key添加到ssh-agent中（如果你使用的是已经存在的SSH key而不是新生成的，需将<em>id_rsa</em>替换成已存在的私钥文件名），输入如下指令：<br> <code>ssh-add ~/.ssh/id_rsa</code></p>
</li>
<li><p>给你的GitHub账号添加SSH key<br> 复制SSH key到剪贴板上，跟踪到文件目录用编辑器打开或执行以下命令：<br> <code>clip &lt; ~/.ssh/id_rsa.pub</code></p>
<p> 进入你的GitHub账户依次点开头像-&gt;Settings-&gt;SSH and GPG keys-&gt;New SSH key，在Title框中输入任何你想起的名字，Key框中粘贴刚才复制的SSH key，点击Add SSH key输入GitHub密码保存即可。</p>
<p> 输入以下命令检查SSH连接：<br> <code>ssh -T git@github.com</code><br> <img src="http://ofjlqteaa.bkt.clouddn.com/hexoDeploy/github7.png" alt=""><br> 你会看到一个警告信息（<a href="https://help.github.com/articles/what-ip-addresses-does-github-use-that-i-should-whitelist/" target="_blank" rel="external">for more info</a>），如果你不想详细了解输入yes即可。之后会看到如下信息：</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hi username! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</div></pre></td></tr></table></figure>
<p> 验证成功。</p>
</li>
</ol>
<h2 id="部署Hexo"><a href="#部署Hexo" class="headerlink" title="部署Hexo"></a>部署Hexo</h2><p>哈，终于到最后一步了。别急，部署之前还需要进行一项非常非常非常非常重要的配置。在Hexo根目录下打开Git Bash输入以下指令：<code>git remote -v</code>。如果返回结果为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git remote -v</div><div class="line">fatal: Not a git repository (or any of the parent directories): .git</div></pre></td></tr></table></figure></p>
<p>就需要执行<code>git init</code>初始化当前目录作为git仓库，并且添加远程仓库。这里就不赘述了，不明白的可以转到<a href="http://www.runoob.com/git/git-tutorial.html" target="_blank" rel="external">菜鸟网站Git教程</a>详细了解。如果返回结果为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git remote -v</div><div class="line">origin  git@github.com:username/username.github.io.git (fetch)</div><div class="line">origin  git@github.com:username/username.github.io.git (push)</div></pre></td></tr></table></figure></p>
<p>则将地址复制，在hexo的配置文件_config.yml，#Deployment下添加如下配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com:username/username.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>repo项的值就是刚才执行<code>git remote -v</code>获取到的地址。<br>接下来就是激动人心的deploy时刻啦！执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
<p>执行<code>hexo deploy</code>可能会要求输入在git上验证的邮箱密码，输入完成后再次执行。由于网络状况不同，deploy时间长度不等耐心等待即可。看到<code>INFO Deploy done:git</code>表明部署成功，在浏览器输入username.github.io就可以访问你的个人博客啦！</p>
<h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><ol>
<li><p>Could not open a connection to your authenticateion agent.<br> 在设置SSH keys第二步执行<code>ssh-keygen -t rsa -C &quot;email@example.com&quot;</code>后，执行：</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ssh-agent -s</div><div class="line">ssh-add ~/.ssh/id_rsa</div></pre></td></tr></table></figure>
<p> 遇到了如上错误。别怕此时执行：<code>eval &#39;ssh-agent -s&#39;</code>（注：<em>使用eval 是为了执行ssh-agent 输出的设置环境变量的bash 命令，以确保ssh-add 可以通过 SSH_AUTH_SOCK 环境变量找到ssh-agent</em>）再执行ssh-add即可，输出结果如下：</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ eval &apos;ssh-agent -s&apos;</div><div class="line">Agent pid 16192</div><div class="line">$ssh-add</div><div class="line">Identity added: /c/Users/Admin/.ssh/id_rsa (/c/Users/Admin/.ssh/id_rsa)</div></pre></td></tr></table></figure>
</li>
<li><p>nothing to commit,working tree clean.Could not read Username for ‘https<nolink>://github.com’：Invalid argument<br> 执行<code>hexo d</code>部署时，出现以上错误。原因是没有在hexo目录中初始化git，需初始化并建立远程仓库。提示Could not read Username for ‘https<nolink>://github.com’是因为第三步配置deploy:repo写成了https<nolink>://github.com/xilihuasi/xilihuasi.github.io.git，应参考步骤3配置。</nolink></nolink></nolink></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2></li>
</ol>
<ul>
<li><a href="http://m.paopaoche.net/new/85988" target="_blank" rel="external">搭建hexo部署到github图文教程</a></li>
<li><a href="https://help.github.com/articles/generating-an-ssh-key/" target="_blank" rel="external">Generrating an SSH key</a></li>
<li><a href="https://github.com/hexojs/hexo/issues/1495" target="_blank" rel="external">Problem with deployment on GitHub</a></li>
<li><a href="https://help.github.com/articles/error-repository-not-found/" target="_blank" rel="external">Error: Repository not found</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前介绍了如何搭建本地hexo环境，相信很多小朋友已经搭建成功了。但是写了博客只放在本地不跟大家分享肯定不是我们想要的，本文就手把手教你怎样把hexo部署到github Page上跟大家分享你的文章。
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>How to build Hexo</title>
    <link href="http://yoursite.com/2016/10/24/How-to-build-Hexo/"/>
    <id>http://yoursite.com/2016/10/24/How-to-build-Hexo/</id>
    <published>2016-10-24T06:38:10.000Z</published>
    <updated>2016-11-25T01:58:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>本教程默认你已经搭建好了Node和Git环境</p>
<h2 id="step-1"><a href="#step-1" class="headerlink" title="step 1"></a>step 1</h2><p>在控制台执行如下命令安装hexo：<br><a id="more"></a><br>npm install -g hexo</p>
<blockquote>
<p><em>安装在当前用户目录下，是hexo的全局安装</em></p>
</blockquote>
<h2 id="step-2"><a href="#step-2" class="headerlink" title="step 2"></a>step 2</h2><p>执行初始化命令，初始化hexo到指定目录：<br>hexo init <folder><br>或者cd到指定目录执行初始化命令：<br>hexo init</folder></p>
<h2 id="step-3"><a href="#step-3" class="headerlink" title="step 3"></a>step 3</h2><p>cd到你的初始化目录，执行如下命令生成静态页面至<em>hexo\public</em>目录：<br>hexo generate</p>
<blockquote>
<p><em>命令完成后即可在<em>hexo\public</em>目录下看到当前日期默认生成的html文件，也可在<em>hexo\source__posts</em>目录下看到md文件。不要急，下一步就可以看到hexo在浏览器中访问的效果啦。</em></p>
</blockquote>
<h2 id="step-4"><a href="#step-4" class="headerlink" title="step 4"></a>step 4</h2><p>执行如下命令启动本地服务：<br>hexo server<br>在浏览器中输入(<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>) 就可以预览搭建成功的hexo啦！</p>
<h2 id="发表第一篇文章"><a href="#发表第一篇文章" class="headerlink" title="发表第一篇文章"></a>发表第一篇文章</h2><p>执行new命令新建文章，生成指定名称的文章至hexo\source\ _posts\postName.md：<br>hexo new [layout] “postName”<br>其中layout是可选参数，默认值为post。在scaffolds目录下查看可选择的layout，当然也可以新建或编辑。 </p>
<p><img src="http://ofjlqteaa.bkt.clouddn.com/Hexo-Step5.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本教程默认你已经搭建好了Node和Git环境&lt;/p&gt;
&lt;h2 id=&quot;step-1&quot;&gt;&lt;a href=&quot;#step-1&quot; class=&quot;headerlink&quot; title=&quot;step 1&quot;&gt;&lt;/a&gt;step 1&lt;/h2&gt;&lt;p&gt;在控制台执行如下命令安装hexo：&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/10/24/hello-world/"/>
    <id>http://yoursite.com/2016/10/24/hello-world/</id>
    <published>2016-10-24T02:55:15.621Z</published>
    <updated>2016-11-25T01:58:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
